import {type NextPage} from "next";
import Head from "next/head";

import {api, type RouterOutputs} from "~/utils/api";
import {SignIn, useUser} from "@clerk/nextjs";
import dayjs from "dayjs"
import relativeTime from "dayjs/plugin/relativeTime"
import Image from "next/image";

dayjs.extend(relativeTime)

const CreatePostWizard = () => {
    const {user} = useUser();
    console.log(user)
    if (!user) return null;
    return (
        <div className="flex w-full gap-3">
            <Image
                src={user.profileImageUrl}
                alt="profile Image"
                className="w-14 h-14 rounded-full"
                width={56}
                height={56}
            />
            <input placeholder="type some emojis!" className="grow bg-transparent outline-none"/>
        </div>
    )
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number]

const PostsView = (props: PostWithUser) => {
    const {post, author} = props;
    return (
        <div className="flex gap-3 border-b border-slate-400 p-4" key={post.id}>
            <img src={author.profilePicture} alt="profile Image" className="w-14 h-14 rounded-full"/>
            <div className="flex flex-col">
                <div className="flex gap-1 text-slate-300"><span>{`@${author.username}`}</span> <span
                    className="font-thin">{` Â· ${dayjs(post.createdAt).fromNow()}`}</span>
                </div>
                <span>{post.content}</span>
            </div>
        </div>
    )
}

const Home: NextPage = () => {

    const user = useUser();

    const {data, isLoading} = api.posts.getAll.useQuery();

    if (isLoading) return <div>Loading...</div>;
    if (!data) return <div>Something went wrong</div>;

    return (<>
        <Head>
            <title>Create T3 App</title>
            <meta name="description" content="Generated by create-t3-app"/>
            <link rel="icon" href="/favicon.ico"/>
        </Head>
        <main
            className="flex h-screen justify-center">
            <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
                <div className="border-b border-slate-400 p-4">
                    {!user.isSignedIn ? <div className="flex justify-center"><SignIn/></div> : <CreatePostWizard/>}
                </div>

                <div className="flex flex-col">
                    {[...data, ...data]?.map((fullPost) => (
                        <PostsView key={fullPost.post.id} {...fullPost}/>
                    ))}
                </div>
            </div>
        </main>
    </>);
};

export default Home;
